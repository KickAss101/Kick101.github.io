I"b	<p><em>A quick guide for the people who know basic python but donâ€™t know how to implement it in infosec context.</em>
<br /><br /></p>

<table>
  <thead>
    <tr>
      <th>Data Types Categories</th>
      <th>Types</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Text types</td>
      <td>str</td>
    </tr>
    <tr>
      <td>Numeric Types</td>
      <td>int, float, complex</td>
    </tr>
    <tr>
      <td>Sequence Types</td>
      <td>list(mutable)<code class="language-plaintext highlighter-rouge">[0,1]</code>, tuple(immutable)<code class="language-plaintext highlighter-rouge">(0,1)</code>, range</td>
    </tr>
    <tr>
      <td>Mapping Type</td>
      <td>dict <code class="language-plaintext highlighter-rouge">{"key":"value"}</code></td>
    </tr>
    <tr>
      <td>Set Types</td>
      <td>set, frozenset <code class="language-plaintext highlighter-rouge">{0,1,2,3}</code></td>
    </tr>
    <tr>
      <td>Boolean Type</td>
      <td>bool <code class="language-plaintext highlighter-rouge">True False</code></td>
    </tr>
    <tr>
      <td>Binary Types</td>
      <td>bytes, bytearray, memoryview</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>Data type of any object can be obtained by using the <code class="language-plaintext highlighter-rouge">type()</code> function</p>
</blockquote>

<hr />
<center><h2>Handling Web Requests&lt;/h3&gt;&lt;/center&gt;

__Packages__
- requests


|Functions|Description|
|-|-|
|requests.get()|Returns requests.Response() object

- [requests.response() - w3schools](https://www.w3schools.com/python/ref_requests_response.asp)


__Snippet__
```python
import requests
res = requests.get("https://www.google.com/")
content = res.content
print(content)
```
---
<center><h3>Sockets</h3></center> 

```python
import socket
```

---
<center><h3>Command line Arguments</h3></center>

```python
import argparse

# Initialize the parser
parser = argparse.ArgumentParser()

# Add optional parameters
parser.add_argument("-t","--target", help="provide target", type="str",default="google.com")

# Parse arguments
args = parser.parse_args()

print(args.target)

```
Example
```shell
# python3 args.py -t yahoo.com
# python3 args.py --target yahoo.com
```
---
<center><h3>Oops</h3></center>

```python
def main():
	print("test")

if __name__ == __main__:
	main()
```	

&lt; post under construction /&gt;

come back later &gt;&gt;
</h2></center>
:ET